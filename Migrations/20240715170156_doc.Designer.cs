// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using healt_Center.Models;

#nullable disable

namespace healt_Center.Migrations
{
    [DbContext(typeof(Patient_DbContext))]
    [Migration("20240715170156_doc")]
    partial class doc
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("healt_Center.Models.Add_Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_Departments");
                });

            modelBuilder.Entity("healt_Center.Models.Doctor", b =>
                {
                    b.Property<int>("doctor_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("doctor_id"));

                    b.Property<string>("doctor_department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("doctor_email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("doctor_gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("doctor_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("doctor_number")
                        .HasColumnType("bigint");

                    b.Property<string>("doctor_profile")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("doctor_id");

                    b.ToTable("tbl__Doctor");
                });

            modelBuilder.Entity("healt_Center.Models.admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_admin");
                });

            modelBuilder.Entity("healt_Center.Models.patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Add_DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("admin_message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly?>("admin_time")
                        .HasColumnType("time");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Add_DepartmentId");

                    b.ToTable("patients");
                });

            modelBuilder.Entity("healt_Center.Models.patient", b =>
                {
                    b.HasOne("healt_Center.Models.Add_Department", null)
                        .WithMany("patients")
                        .HasForeignKey("Add_DepartmentId");
                });

            modelBuilder.Entity("healt_Center.Models.Add_Department", b =>
                {
                    b.Navigation("patients");
                });
#pragma warning restore 612, 618
        }
    }
}
